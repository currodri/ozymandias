import matplotlib.pyplot as plt
import swiftascmaps
import seaborn as sns
sns.set_theme(style="white")

hydro_variables_ordering = {}

part_variables_ordering = {}

part_variables_type = {}

geometrical_variables = dict(
        x = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$x$ [kpc]',
                'label_log':r'$\log\left(x/{\rm kpc}\right)$',
                'units':'kpc',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_length',
                'neighbour':False,
                'symlog':True
    },
    y = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$y$ [kpc]',
                'label_log':r'$\log\left(x/{\rm kpc}\right)$',
                'units':'kpc',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_length',
                'neighbour':False,
                'symlog':True
    },
    z = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$z$ [kpc]',
                'label_log':r'$\log\left(x/{\rm kpc}\right)$',
                'units':'kpc',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_length',
                'neighbour':False,
                'symlog':True
    },
    d_euclid = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$d$ [kpc]',
                'label_log':r'$\log\left(d/{\rm kpc}\right)$',
                'units':'kpc',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_length',
                'neighbour':False,
                'symlog':False
    },
    r_sphere = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$r$ [kpc]',
                'label_log':r'$\log\left(r/{\rm kpc}\right)$',
                'units':'kpc',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_length',
                'neighbour':False,
                'symlog':False
    },
    theta_sphere = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\theta$ [rad]',
                'label_log':r'$\log\left(\theta/{\rm rad}\right)$',
                'units':'radian',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'radian',
                'neighbour':False,
                'symlog':False
    },
    phi_sphere = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\phi$ [rad]',
                'label_log':r'$\log\left(\phi/{\rm rad}\right)$',
                'units':'radian',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'radian',
                'neighbour':False,
                'symlog':False
    },
    r_cyl = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$R$ [kpc]',
                'label_log':r'$\log\left(R/{\rm kpc}\right)$',
                'units':'kpc',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_length',
                'neighbour':False,
                'symlog':False
    },
    phi_cyl = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\phi$ [rad]',
                'label_log':r'$\log\left(\phi/{\rm rad}\right)$',
                'units':'radian',
                'vmin':1e-3,
                'vmax':7e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'radian',
                'neighbour':False,
                'symlog':False
    }
)

raw_gas_variables = dict(
   velocity_x = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_x$ [km/s]',
                'label_log':r'$\log\left(v_x/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    velocity_y = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_y$ [km/s]',
                'label_log':r'$\log\left(v_y/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    velocity_z = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_z$ [km/s]',
                'label_log':r'$\log\left(v_z/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    density = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\rho$ [g/cm$^{3}$]',
                'label_log':r'$\log\left(\rho/{\rm g\,cm}^{-3}\right)$',
                'units':'g*cm**-3',
                'vmin':8e-31,
                'vmax':7e-22,
                'bin_min':1e-30,
                'bin_max':8e-20,
                'vmin_galaxy':8e-28,
                'vmax_galaxy':5e-22,
                'vmin_cgm':5e-29,
                'vmax_cgm':8e-26,
                'vmin_cluster':8e-31,
                'vmax_cluster':7e-22,
                'code_units':'code_density',
                'neighbour':False,
                'symlog':False
    },
    thermal_pressure = {'cmap':'viridis',
                            'text_over':'white',
                            'label':r'$P_{\rm ther}$ [erg/cm$^{-3}$]',
                            'label_log':r'$\log\left(\frac{P_{\rm ther}}{{\rm erg/cm}^{-3}}\right)$',
                            'units':'erg*cm**-3',
                            'vmin':3e-15,
                            'vmax':8e-9,
                            'bin_min':3e-15,
                            'bin_max':8e-9,
                            'vmin_galaxy':3e-15,
                            'vmax_galaxy':8e-9,
                            'code_units':'code_pressure',
                            'neighbour':False,
                            'symlog':False
    },
    metallicity = {'cmap':'swift.red_tv',
                    'text_over':'white',
                    'label':r'$Z$ [$Z_{\odot}$]',
                    'label_log':r'$\log\left(Z/{\rm Z}_{\odot}\right)$',
                    'units':'dimensionless',
                    'vmin':5e-3,
                    'vmax':1.5,
                    'bin_min':2e-4,
                    'bin_max':2.0,
                    'vmin_galaxy':2e-2,
                    'vmax_galaxy':8,
                    'vmin_cgm':5e-3,
                    'vmax_cgm':1.5,
                    'code_units':'code_metallicity',
                    'neighbour':False,
                    'symlog':False
    },
    B_left_x = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$B$ [$G$]',
                                'label_log':r'$\log(\frac{B}{{\rm G}})$',
                                'units':'G',
                                'vmin':4e-12,
                                'vmax':5e-5,
                                'bin_min':4e-12,
                                'bin_max':5e-5,
                                'vmin_galaxy':4e-10,
                                'vmax_galaxy':5e-5,
                                'vmin_cgm':4e-10,
                                'vmax_cgm':5e-7,
                                'code_units':'code_magnetic',
                                'neighbour':False,
                                'symlog':True

    },
    B_left_y = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$B$ [$G$]',
                                'label_log':r'$\log(\frac{B}{{\rm G}})$',
                                'units':'G',
                                'vmin':4e-12,
                                'vmax':5e-5,
                                'bin_min':4e-12,
                                'bin_max':5e-5,
                                'vmin_galaxy':4e-10,
                                'vmax_galaxy':5e-5,
                                'vmin_cgm':4e-10,
                                'vmax_cgm':5e-7,
                                'code_units':'code_magnetic',
                                'neighbour':False,
                                'symlog':True

    },
    B_left_z = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$B$ [$G$]',
                                'label_log':r'$\log(\frac{B}{{\rm G}})$',
                                'units':'G',
                                'vmin':4e-12,
                                'vmax':5e-5,
                                'bin_min':4e-12,
                                'bin_max':5e-5,
                                'vmin_galaxy':4e-10,
                                'vmax_galaxy':5e-5,
                                'vmin_cgm':4e-10,
                                'vmax_cgm':5e-7,
                                'code_units':'code_magnetic',
                                'neighbour':False,
                                'symlog':True

    },
    B_right_x = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$B$ [$G$]',
                                'label_log':r'$\log(\frac{B}{{\rm G}})$',
                                'units':'G',
                                'vmin':4e-12,
                                'vmax':5e-5,
                                'bin_min':4e-12,
                                'bin_max':5e-5,
                                'vmin_galaxy':4e-10,
                                'vmax_galaxy':5e-5,
                                'vmin_cgm':4e-10,
                                'vmax_cgm':5e-7,
                                'code_units':'code_magnetic',
                                'neighbour':False,
                                'symlog':True

    },
    B_right_y = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$B$ [$G$]',
                                'label_log':r'$\log(\frac{B}{{\rm G}})$',
                                'units':'G',
                                'vmin':4e-12,
                                'vmax':5e-5,
                                'bin_min':4e-12,
                                'bin_max':5e-5,
                                'vmin_galaxy':4e-10,
                                'vmax_galaxy':5e-5,
                                'vmin_cgm':4e-10,
                                'vmax_cgm':5e-7,
                                'code_units':'code_magnetic',
                                'neighbour':False,
                                'symlog':True

    },
    B_right_z = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$B$ [$G$]',
                                'label_log':r'$\log(\frac{B}{{\rm G}})$',
                                'units':'G',
                                'vmin':4e-12,
                                'vmax':5e-5,
                                'bin_min':4e-12,
                                'bin_max':5e-5,
                                'vmin_galaxy':4e-10,
                                'vmax_galaxy':5e-5,
                                'vmin_cgm':4e-10,
                                'vmax_cgm':5e-7,
                                'code_units':'code_magnetic',
                                'neighbour':False,
                                'symlog':True

    },
    
    cr_pressure = {'cmap':'YlGnBu_r',#sns.cubehelix_palette(start=2, rot=0, dark=0, light=.95, reverse=False, as_cmap=True),
                        'text_over':'black',
                        'label':r'$P_{\rm CR}$ [erg/cm$^{3}$]',
                        'label_log':r'$\log(\frac{P_{\rm CR}}{{\rm erg/cm}^{3}})$',
                        'units':'erg*cm**-3',
                        'vmin':7e-18,
                        'vmax':8e-12,
                        'bin_min':7e-18,
                        'bin_max':8e-12,
                        'vmin_grad':7e-16,
                        'vmax_grad':8e-13,
                        'vmin_galaxy':6e-14,
                        'vmax_galaxy':2e-10,
                        'code_units':'code_pressure',
                        'neighbour':False,
                        'symlog':False

    },
    xHII = {'cmap':'bone',
            'text_over':'white',
            'label':r'$X_{\rm HII}$',
            'label_log':r'$\log(X_{\rm HII})$',
            'units':'dimensionless',
            'vmin':5e-4,
            'vmax':0.8,
            'vmin_galaxy':5e-4,
            'vmax_galaxy':0.8,
            'code_units':'dimensionless',
            'neighbour':False,
            'symlog':False

    },
    xHeII = {'cmap':'swift.red',
            'text_over':'white',
            'label':r'$X_{\rm HeII}$',
            'label_log':r'$\log(X_{\rm HeII})$',
            'units':'dimensionless',
            'vmin':5e-4,
            'vmax':0.8,
            'vmin_galaxy':5e-4,
            'vmax_galaxy':0.8,
            'code_units':'dimensionless',
            'neighbour':False,
            'symlog':False

    },
    xHeIII = {'cmap':'swift.red',
                'text_over':'white',
                'label':r'$X_{\rm HeIII}$',
                'label_log':r'$\log(X_{\rm HeIII})$',
                'units':'dimensionless',
                'vmin':5e-4,
                'vmax':0.8,
                'code_units':'dimensionless',
                'neighbour':False,
                'symlog':False

    },
)

derived_gas_variables = dict(
        v_sphere_r = {'cmap':sns.color_palette("icefire", as_cmap=True),
                  'cmap_inflow':'GnBu_r',
                  'cmap_outflow':'YlOrBr_r',
                    'text_over':'white',
                    'label':r'$v_r$ [km/s]',
                    'label_log':r'$\log(\frac{v_r}{\rm km/s})$',
                    'units':'km*s**-1',
                    'vmin':-180,
                    'vmax':+210,
                    'bin_min':-400,
                    'bin_max':+400,
                    'vmin_galaxy':-200,
                    'vmax_galaxy':+250,
                    'vmin_outflow':15,
                    'vmax_outflow':300,
                    'vmin_inflow':80,
                    'vmax_inflow':20,
                    'vmin_cgm':-180,
                    'vmax_cgm':+210,
                    'linthresh':10,
                    'linscale':1,
                    'code_units':'code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    v_sphere_phi = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{\phi}$ [km/s]',
                'label_log':r'$\log\left(v_{\phi}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_sphere_theta = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{\theta}$ [km/s]',
                'label_log':r'$\log\left(v_{\theta}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_cyl_r = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{R}$ [km/s]',
                'label_log':r'$\log\left(v_{R}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_cyl_z = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{z}$ [km/s]',
                'label_log':r'$\log\left(v_{z}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_cyl_phi = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{\phi}$ [km/s]',
                'label_log':r'$\log\left(v_{\phi}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_magnitude = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\vert v \vert$ [km/s]',
                'label_log':r'$\log\left(\vert v \vert/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':False
    },
    v_squared = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\vert v \vert^2$ [km$^2$/s$^2$]',
                'label_log':r'$\log\left(\vert v \vert^2/{{\rm (km/s)}^2}\right)$',
                'units':'km**2/s**2',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity*code_velocity',
                'neighbour':False,
                'symlog':False
    },
    kinetic_energy = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$E_{\rm k}$ [erg]',
                'label_log':r'$\log\left(\vert v \vert^2/{{\rm erg}}\right)$',
                'units':'erg',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_energy',
                'neighbour':False,
                'symlog':False
    },
    momentum_x = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_{\rm x}$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_{\rm x}/{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    momentum_y = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_{\rm y}$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_{\rm y}/{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    momentum_z = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_{\rm z}$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_{\rm z}/{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    momentum = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\vert p\vert$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(\vert p \vert/{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':False
    },
    momentum_sphere_r = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_r$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_r /{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    momentum_cyl_z = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_z$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_z /{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
  mass = {'cmap':sns.color_palette("mako", as_cmap=True),
            'text_over':'white',
            'label':r'$M_{\rm gas}$ [M$_{\odot}$]',
            'label_log':r'$\log$(\frac{M_{\rm gas}}{{\rm M}$_{\odot}$})',
            'units':'Msun',
            'vmin':1,
            'vmax':1e+8,
            'bin_min':1,
            'bin_max':1e+8,
            'vmin_galaxy':1e+3,
            'vmax_galaxy':1e+8,
            'code_units':'code_mass',
            'neighbour':False,
            'symlog':False
    },
    volume = {'cmap':sns.color_palette("mako", as_cmap=True),
            'text_over':'white',
            'label':r'$V_{\rm gas}$ [kpc$^{3}$]',
            'label_log':r'$\log(\frac{V_{\rm gas}}{{\rm kpc}^3}})$',
            'units':'kpc**3',
            'vmin':1,
            'vmax':1e+8,
            'bin_min':1,
            'bin_max':1e+8,
            'vmin_galaxy':1e+3,
            'vmax_galaxy':1e+8,
            'code_units':'code_length*code_length*code_length',
            'neighbour':False,
            'symlog':False
        },
    sound_speed = {'cmap':sns.color_palette("mako", as_cmap=True),
            'text_over':'white',
            'label':r'$c_{\rm s}$ [km/s]',
            'label_log':r'$\log(\frac{c_{\rm s}}{{\rm km s}^{-1}}})$',
            'units':'km/s',
            'vmin':1,
            'vmax':1e+8,
            'bin_min':1,
            'bin_max':1e+8,
            'vmin_galaxy':1e+3,
            'vmax_galaxy':1e+8,
            'code_units':'code_velocity',
            'neighbour':False,
            'symlog':False

    },
    temperature = {'cmap':sns.color_palette("rocket", as_cmap=True),
                    'text_over':'white',
                    'label':r'$T$ [K]',
                    'label_log':r'$\log\left(T/{\rm K}\right)$',
                    'units':'K',
                    'vmin':8e+3,
                    'vmax':2e+8,
                    'bin_min':2,
                    'bin_max':2e+8,
                    'vmin_galaxy':8e+2,
                    'vmax_galaxy':8e+6,
                    'vmin_outflow':4e+3,
                    'vmax_outflow':7e+5,
                    'vmin_cgm':7e+3,
                    'vmax_cgm':8e+6,
                    'code_units':'code_temperature',
                    'neighbour':False,
                    'symlog':False     
    },
    thermal_energy = {'cmap':sns.color_palette("rocket", as_cmap=True),
                            'text_over':'white',
                            'label':r'$E_{\rm ther}$ [erg]',
                            'label_log':r'$\log(\frac{E_{\rm ther}}{{\rm erg}})$',
                            'units':'erg',
                            'vmin':5e+1,
                            'vmax':2e+6,
                            'bin_min':5e+1,
                            'bin_max':2e+6,
                            'vmin_galaxy':5e+3,
                            'vmax_galaxy':8e+6,
                            'code_units':'code_energy',
                            'neighbour':False,
                            'symlog':False
    },
    thermal_energy_specific = {'cmap':sns.color_palette("rocket", as_cmap=True),
                                'text_over':'white',
                                'label':r'$\epsilon_{\rm ther}$ [erg/g]',
                                'label_log':r'$\log(\frac{\epsilon_{\rm ther}}{{\rm erg/g}})$',
                                'units':'erg*g**-1',
                                'vmin':5e+1,
                                'vmax':2e+6,
                                'bin_min':5e+9,
                                'bin_max':2e+13,
                                'vmin_galaxy':5e+3,
                                'vmax_galaxy':8e+6,
                                'code_units':'code_specific_energy',
                                'neighbour':False,
                                'symlog':False
    },
    net_cooling = {'cmap':'vlag',
                        'text_over':'black',
                        'label':r'$\Lambda_{\rm cool}$ [erg/(s cm$^{3}$)]',
                        'label_log':r'$\log(\frac{\Lambda_{\rm cool}}{{\rm erg/(s cm}^{3})}})$',
                        'units':'erg*s**-1*cm**-3',
                        'vmin':-1e-26,
                        'vmax':1e-21,
                        'bin_min':-1e-18,
                        'bin_max':1e-10,
                        'vmin_galaxy':-1e-26,
                        'vmax_galaxy':1e-21,
                        'vmin_cgm':-1e-28,
                        'vmax_cgm':1e-26,
                        'linthresh':1e-30,
                        'linscale':1,
                        'code_units':'code_energy_density/code_time',
                        'neighbour':False,
                        'symlog':True
    },
    stheatcooling_ratio = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\vert \Lambda_{\rm st} / \Lambda_{\rm cool} \vert$',
                        'label_log':r'$\log(\frac{\Lambda_{\rm st}}{\Lambda_{\rm cool}})$',
                        'units':'dimensionless',
                        'vmin':1e-6,
                        'vmax':1,
                        'bin_min':1e-10,
                        'bin_max':10,
                        'vmin_galaxy':1e-6,
                        'vmax_galaxy':10,
                        'vmin_cgm':1e-6,
                        'vmax_cgm':10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False
    },
    entropy_specific = {'cmap':'plasma',
                        'text_over':'white',
                        'label':r'$s$ [erg/(g K)]',
                        'label_log':r'$\log(\frac{s}{{\rm erg/(g K)}})$',
                        'units':'erg*K**-1*g**-1',
                        'vmin':8e+3,
                        'vmax':2e+5,
                        'bin_min':8e+3,
                        'bin_max':2e+5,
                        'vmin_galaxy':8e+7,
                        'vmax_galaxy':2e+9,
                        'code_units':'code_specific_entropy',
                        'neighbour':False,
                        'symlog':False
    },
    magnetic_energy = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$E_{\rm mag}$ [erg]',
                                'label_log':r'$\log(\frac{E_{\rm mag}}{{\rm erg}})$',
                                'units':'erg',
                                'vmin':5e+10,
                                'vmax':3e+12,
                                'bin_min':5e+10,
                                'bin_max':3e+12,
                                'code_units':'code_energy',
                                'neighbour':False,
                                'symlog':False

    },
    magnetic_energy_specific = {'cmap':sns.cubehelix_palette(reverse=True,as_cmap=True),
                                'text_over':'white',
                                'label':r'$\epsilon_{\rm mag}$ [erg/g]',
                                'units':'erg*g**-1',
                                'vmin':5e+7,
                                'vmax':3e+11,
                                'bin_min':2e+4,
                                'bin_max':3e+10,
                                'vmin_galaxy':5e+7,
                                'vmax_galaxy':3e+11,
                                'vmin_cgm':5e+7,
                                'vmax_cgm':3e+11,
                                'code_units':'code_specific_energy',
                                'neighbour':False,
                                'symlog':False

    },
    magnetic_energy_density = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$\varepsilon_{\rm mag}$ [erg/cm$^{3}$]',
                                'label_log':r'$\log(\frac{\varepsilon_{\rm mag}}{{\rm erg/cm}^{3}})$',
                                'units':'erg*cm**-3',
                                'vmin':4e-17,
                                'vmax':5e-11,
                                'bin_min':4e-17,
                                'bin_max':5e-11,
                                'vmin_galaxy':4e-17,
                                'vmax_galaxy':5e-11,
                                'code_units':'code_energy_density',
                                'neighbour':False,
                                'symlog':False

    },
    magnetic_pressure = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$P_{\rm mag}$ [erg/cm$^{3}$]',
                                'label_log':r'$\log(\frac{P_{\rm mag}}{{\rm erg/cm}^{3}})$',
                                'units':'erg*cm**-3',
                                'vmin':4e-17,
                                'vmax':5e-11,
                                'bin_min':4e-17,
                                'bin_max':5e-11,
                                'vmin_galaxy':4e-17,
                                'vmax_galaxy':5e-11,
                                'code_units':'code_pressure',
                                'neighbour':False,
                                'symlog':False

    },
    magnetic_magnitude = {'cmap':'inferno',
                                'text_over':'white',
                                'label':r'$B$ [$G$]',
                                'label_log':r'$\log(\frac{B}{{\rm G}})$',
                                'units':'G',
                                'vmin':4e-12,
                                'vmax':5e-5,
                                'bin_min':4e-12,
                                'bin_max':5e-5,
                                'vmin_galaxy':4e-10,
                                'vmax_galaxy':5e-5,
                                'vmin_cgm':4e-10,
                                'vmax_cgm':5e-7,
                                'code_units':'code_magnetic',
                                'neighbour':False,
                                'symlog':False

    },
    alfven_speed = {'cmap':'swift.evermore',
                        'text_over':'white',
                        'label':r'$v_{\rm A}$ [${\rm km s}^{-1}$]',
                        'label_log':r'$\log(\frac{v_{\rm A}}{{\rm km s}^{-1}})$',
                        'units':'km/s',
                        'vmin':3e-2,
                        'vmax':5e0,
                        'bin_min':3e-2,
                        'bin_max':5e0,
                        'vmin_galaxy':3,
                        'vmax_galaxy':60,
                        'vmin_cgm':3e-2,
                        'vmax_cgm':5e0,
                        'code_units':'code_velocity',
                        'neighbour':False,
                        'symlog':False

    },
    diffusion_speed = {'cmap':'swift.red',
                                'text_over':'white',
                                'label':r'$v_{\rm Diff}$ [km s$^{-1}$]',
                                'label_log':r'$\log(\frac{v_{\rm Diff}}{{\rm km s}^{-1}})$',
                                'units':'km/s',
                                'vmin':3e-2,
                                'vmax':5e0,
                                'bin_min':3e-2,
                                'bin_max':5e0,
                                'vmin_galaxy':3e-2,
                                'vmax_galaxy':5e0,
                                'code_units':'code_velocity',
                                'neighbour':True,
                                'symlog':False

    },
    alfvendiff_ratio = {'cmap':'swift.red',
                                'text_over':'white',
                                'label':r'$v_{\rm A}/v_{\rm Diff}$',
                                'label_log':r'$\log \left(\frac{v_{\rm A}}{v_{\rm Diff}}\right)$',
                                'units':'dimensionless',
                                'vmin':3e-2,
                                'vmax':1,
                                'bin_min':3e-2,
                                'bin_max':5e0,
                                'vmin_galaxy':3e-3,
                                'vmax_galaxy':1.5,
                                'vmin_cgm':3e-3,
                                'vmax_cgm':1.5,
                                'code_units':'dimensionless',
                                'neighbour':True,
                                'symlog':False

    },
    cr_energy = {'cmap':sns.cubehelix_palette(start=2, rot=0, dark=0, light=.95, reverse=True, as_cmap=True),
                        'text_over':'white',
                        'label':r'$E_{\rm CR}$ [erg]',
                        'label_log':r'$\log(\frac{\varepsilon_{\rm CR}}{{\rm erg/cm}^{3}})$',
                        'label_log':r'$\log(\frac{E_{\rm CR}}{{\rm erg}})$',
                        'units':'erg',
                        'vmin':4e-14,
                        'vmax':8e-11,
                        'bin_min':4e-14,
                        'bin_max':8e-11,
                        'vmin_galaxy':4e48,
                        'vmax_galaxy':8e53,
                        'code_units':'code_energy',
                        'neighbour':False,
                        'symlog':False

    },
    cr_energy_density = {'cmap':'YlGnBu_r',#sns.cubehelix_palette(start=2, rot=0, dark=0, light=.95, reverse=False, as_cmap=True),
                        'text_over':'black',
                        'label':r'$\varepsilon_{\rm CR}$ [erg/cm$^{3}$]',
                        'label_log':r'$\log(\frac{\varepsilon_{\rm CR}}{{\rm erg/cm}^{3}})$',
                        'units':'erg*cm**-3',
                        'vmin':7e-18,
                        'vmax':3e-11,
                        'bin_min':7e-18,
                        'bin_max':8e-12,
                        'vmin_galaxy':6e-13,
                        'vmax_galaxy':8e-10,
                        'vmin_cgm':7e-15,
                        'vmax_cgm':3e-11,
                        'code_units':'code_energy_density',
                        'neighbour':False,
                        'symlog':False

    },
    cr_temperature_eff = {'cmap':'YlGnBu_r',#sns.cubehelix_palette(start=2, rot=0, dark=0, light=.95, reverse=False, as_cmap=True),
                        'text_over':'black',
                        'label':r'$T_{\rm CR,eff}$ [erg/cm$^{3}$]',
                        'label_log':r'$\log\left(\frac{T_{\rm CR,eff}}{{\rm K}}\right)$',
                        'units':'K',
                        'vmin':2e+4,
                        'vmax':8e+6,
                        'bin_min':2e+4,
                        'bin_max':8e+6,
                        'vmin_galaxy':8e+1,
                        'vmax_galaxy':8e+6,
                        'vmin_outflow':5e+3,
                        'vmax_outflow':3e+5,
                        'code_units':'code_temperature',
                        'neighbour':False,
                        'symlog':False

    },
    grad_crp = {'cmap':'YlGnBu_r',#sns.cubehelix_palette(start=2, rot=0, dark=0, light=.95, reverse=False, as_cmap=True),
                        'text_over':'white',
                        'label':r'$\vert \nabla P_{\rm CR}\vert$ [erg/cm$^{4}$]',
                        'label_log':r'$\log(\frac{\vert \nabla P_{\rm CR}\vert}{{\rm erg/cm}^{4}})$',
                        'units':'erg*cm**-4',
                        'vmin':6e-34,
                        'vmax':2e-31,
                        'bin_min':6e-34,
                        'bin_max':2e-31,
                        'vmin_galaxy':6e-34,
                        'vmax_galaxy':6e-30,
                        'code_units':'code_pressure/code_length',
                        'neighbour':True,
                        'symlog':False

    },
    gradscale_crprsphere = {'cmap':sns.cubehelix_palette(start=.5, rot=-.75, as_cmap=True),
                        'text_over':'white',
                        'label':r'$\vert P_{\rm CR}/\nabla P_{\rm CR}\vert$ [kpc]',
                        'label_log':r'$\log(\frac{\vert P_{\rm CR}/\nabla P_{\rm CR}\vert}{\rm kpc})$',
                        'units':'kpc',
                        'vmin':1e-3,
                        'vmax':1e3,
                        'bin_min':1e-3,
                        'bin_max':1e3,
                        'vmin_galaxy':3e-2,
                        'vmax_galaxy':3e1,
                        'code_units':'code_length',
                        'neighbour':True,
                        'symlog':False

    },
    gradscale_crp = {'cmap':sns.cubehelix_palette(start=.5, rot=-.75, as_cmap=True),
                        'text_over':'white',
                        'label':r'$\vert P_{\rm CR}/\nabla P_{\rm CR}\vert$ [kpc]',
                        'label_log':r'$\log(\frac{\vert P_{\rm CR}/\nabla P_{\rm CR}\vert}{\rm kpc})$',
                        'units':'kpc',
                        'vmin':1e-3,
                        'vmax':1e3,
                        'bin_min':1e-3,
                        'bin_max':1e3,
                        'vmin_galaxy':3e-2,
                        'vmax_galaxy':3e1,
                        'code_units':'code_length',
                        'neighbour':True,
                        'symlog':False

    },
    grad_crpz = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\nabla_z P_{\rm CR}$ [erg/cm$^{4}$]',
                        'label_log':r'$\log(\frac{\nabla_z P_{\rm CR}}{{\rm erg/cm}^{4}})$',
                        'units':'erg*cm**-4',
                        'vmin':-2e-31,
                        'vmax':2e-31,
                        'bin_min':-2e-31,
                        'bin_max':2e-31,
                        'vmin_galaxy':-2e-28,
                        'vmax_galaxy':2e-28,
                        'code_units':'code_pressure/code_length',
                        'neighbour':True,
                        'symlog':True

    },
    grad_crprsphere = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\nabla_r P_{\rm CR}$ [erg/cm$^{4}$]',
                        'label_log':r'$\log(\frac{\nabla_r P_{\rm CR}}{{\rm erg/cm}^{4}})$',
                        'units':'erg*cm**-4',
                        'vmin':-2e-31,
                        'vmax':2e-31,
                        'bin_min':-2e-31,
                        'bin_max':2e-31,
                        'vmin_galaxy':-2e-28,
                        'vmax_galaxy':2e-28,
                        'code_units':'code_pressure/code_length',
                        'neighbour':True,
                        'symlog':True

    },
    grad_therprsphere = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\nabla_r P_{\rm th}$ [erg/cm$^{4}$]',
                        'label_log':r'$\log(\frac{\nabla_r P_{\rm th}}{{\rm erg/cm}^{4}})$',
                        'units':'erg*cm**-4',
                        'vmin':-2e-31,
                        'vmax':2e-31,
                        'bin_min':-2e-31,
                        'bin_max':2e-31,
                        'vmin_galaxy':-2e-28,
                        'vmax_galaxy':2e-28,
                        'code_units':'code_pressure/code_length',
                        'neighbour':True,
                        'symlog':True

    },
    grad_therpz = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\nabla_z P_{\rm th}$ [erg/cm$^{4}$]',
                        'label_log':r'$\log(\frac{\nabla_z P_{\rm th}}{{\rm erg/cm}^{4}})$',
                        'units':'erg*cm**-4',
                        'vmin':-2e-31,
                        'vmax':2e-31,
                        'bin_min':-2e-31,
                        'bin_max':2e-31,
                        'vmin_galaxy':-2e-28,
                        'vmax_galaxy':2e-28,
                        'code_units':'code_pressure/code_length',
                        'neighbour':True,
                        'symlog':True

    },
    streaming_heating = {'cmap':'gnuplot',
                        'text_over':'white',
                        'label':r'$\Lambda_{\rm st}$ [erg/(s cm$^{3})$]',
                        'label_log':r'$\log(\frac{\Lambda_{\rm st}}{{\rm erg/(s cm}^{3})})$',
                        'units':'erg*s**-1*cm**-3',
                        'vmin':3e-33,
                        'vmax':1e-23,
                        'bin_min':3e-33,
                        'bin_max':1e-23,
                        'vmin_galaxy':3e-33, 
                        'vmax_galaxy':1e-23,
                        'code_units':'code_energy_density/code_time',
                        'neighbour':False,
                        'symlog':False

    },
    cr_GH08heat = {'cmap':'gnuplot',
                        'text_over':'white',
                        'label':r'$\Lambda_{\rm CR}$ [erg/(s cm$^{3})$]',
                        'label_log':r'$\log(\frac{\Lambda_{\rm CR}}{{\rm erg/(s cm}^{3})})$',
                        'units':'erg*s**-1*cm**-3',
                        'vmin':3e-33,
                        'vmax':1e-23,
                        'bin_min':3e-33,
                        'bin_max':1e-23,
                        'vmin_galaxy':3e-33, 
                        'vmax_galaxy':1e-23,
                        'code_units':'code_energy_density/code_time',
                        'neighbour':False,
                        'symlog':False

    },
    cr_energy_specific = {'cmap':sns.color_palette("crest_r", as_cmap=True), #sns.cubehelix_palette(start=2, rot=0, dark=0, light=.95, reverse=True, as_cmap=True),
                                'text_over':'white',
                                'label':r'$\epsilon_{\rm CR}$ [erg/g]',
                                'label_log':r'$\log(\frac{\epsilon_{\rm CR}}{\rm erg/g})$',
                                'units':'erg*g**-1',
                                'vmin':7e+11,
                                'vmax':7e+14,
                                'bin_min':1e+9,
                                'bin_max':1e+17,
                                'vmin_galaxy':5e+15,
                                'vmax_galaxy':7e+16,
                                'vmin_cgm':5e+12,
                                'vmax_cgm':7e+14,
                                'code_units':'code_specific_energy',
                                'neighbour':False,
                                'symlog':False

    },
    total_coolingtime = {'cmap':'swift.red',
                                'text_over':'white',
                                'label':r'$t_{\rm cool}$ [Myr]',
                                'label_log':r'$\log(\frac{t_{\rm cool}}{\rm Myr})$',
                                'units':'Myr',
                                'vmin':1e-2,
                                'vmax':7e+5,
                                'bin_min':1e-2,
                                'bin_max':7e+5,
                                'vmin_galaxy':1e-2,
                                'vmax_galaxy':7e+5,
                                'code_units':'code_time',
                                'neighbour':True,
                                'symlog':False

    },
    crthermal_ratio = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\frac{\nabla P_{\rm CR}}{\nabla P_{\rm ther}}$',
                        'label_log':r'$\log(\frac{\nabla P_{\rm CR}}{\nabla P_{\rm ther}})$',
                        'units':'dimensionless',
                        'vmin':7e-18,
                        'vmax':8e-12,
                        'bin_min':7e-18,
                        'bin_max':8e-12,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':1e+2,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_crpfz = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{z} P_{\rm CR}}{\rho g_{z}}$',
                        'label_log':r'$\log(\frac{-\nabla_{z} P_{\rm CR}}{\rho g_{z}})$',
                        'units':'dimensionless',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-100,
                        'bin_max':+100,
                        'vmin_galaxy':-5,
                        'vmax_galaxy':+5,
                        'linthresh':1e-2,
                        'linscale':1e-2,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':True

    },
    grav_therpfz = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{z} P_{\rm ther}}{\rho g_{z}}$',
                        'label_log':r'$\log(\frac{-\nabla_{z} P_{\rm ther}}{\rho g_{z}})$',
                        'units':'dimensionless',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-100,
                        'bin_max':+100,
                        'vmin_galaxy':-5,
                        'vmax_galaxy':+5,
                        'linthresh':1e-2,
                        'linscale':1e-2,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':True

    },
    grav_crpfrsphere = {'cmap':'RdBu_r',
                        'text_over':'white',
                        'label':r'$\frac{-\nabla_{r} P_{\rm CR}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm CR}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-100,
                        'bin_max':+100,
                        'vmin_galaxy':-5,
                        'vmax_galaxy':+5,
                        'linthresh':1,
                        'linscale':1,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':True

    },
    grav_crpfrspherepos = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm CR}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm CR}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':1e-3,
                        'vmax':+100,
                        'bin_min':1e-3,
                        'bin_max':+1000,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':+10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_crpfrsphereneg = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm CR}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm CR}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':1e-3,
                        'vmax':+100,
                        'bin_min':1e-3,
                        'bin_max':+1000,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':+10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_therpfrsphere = {'cmap':'RdBu_r',
                        'text_over':'white',
                        'label':r'$\frac{-\nabla_{r} P_{\rm ther}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm ther}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-50,
                        'bin_max':+50,
                        'vmin_galaxy':-5,
                        'vmax_galaxy':+5,
                        'linthresh':1,
                        'linscale':1,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':True

    },
    grav_therpfrspherepos = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm ther}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm ther}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':1e-3,
                        'vmax':+100,
                        'bin_min':1e-3,
                        'bin_max':+100,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':+10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_therpfrsphereneg = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm ther}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm ther}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':1e-3,
                        'vmax':+100,
                        'bin_min':1e-5,
                        'bin_max':+500,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':+10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_totpfrsphere = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm tot}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm tot}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-100,
                        'bin_max':+100,
                        'vmin_galaxy':-5,
                        'vmax_galaxy':+5,
                        'linthresh':1,
                        'linscale':1,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':True

    },
    grav_totpfrspherepos = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm tot}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm tot}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':1e-3,
                        'vmax':+100,
                        'bin_min':1e-3,
                        'bin_max':+1000,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':+10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_totpfrsphereneg = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm tot}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm tot}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':1e-3,
                        'vmax':+100,
                        'bin_min':1e-3,
                        'bin_max':+1000,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':+10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_magpfrsphere = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm mag}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm mag}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-100,
                        'bin_max':+100,
                        'vmin_galaxy':-5,
                        'vmax_galaxy':+5,
                        'linthresh':1,
                        'linscale':1e-5,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':True

    },
    grav_magpfrspherepos = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm mag}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm mag}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':1e-5,
                        'vmax':+100,
                        'bin_min':1e-5,
                        'bin_max':+10,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':+10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_magpfrsphereneg = {'cmap':'Spectral',
                        'text_over':'black',
                        'label':r'$\frac{-\nabla_{r} P_{\rm mag}}{\rho g_{r}}$',
                        'label_log':r'$\log(\frac{-\nabla_{r} P_{\rm mag}}{\rho g_{r}})$',
                        'units':'dimensionless',
                        'vmin':1e-5,
                        'vmax':+100,
                        'bin_min':1e-6,
                        'bin_max':+1,
                        'vmin_galaxy':1e-3,
                        'vmax_galaxy':+10,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    grav_crpf = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\frac{\vert \nabla P_{\rm CR}\vert}{\rho \vert g\vert}$',
                        'label_log':r'$\log(\frac{\vert \nabla P_{\rm CR}\vert}{\rho \vert g\vert})$',
                        'units':'dimensionless',
                        'vmin':1e-2,
                        'vmax':+10,
                        'bin_min':1e-2,
                        'bin_max':+10,
                        'vmin_galaxy':1e-2,
                        'vmax_galaxy':+1e+1,
                        'code_units':'dimensionless',
                        'neighbour':True,
                        'symlog':False

    },
    ang_momentum = {'cmap':sns.color_palette("vlag", as_cmap=True),
                    'text_over':'black',
                    'label':r'$\vert L\vert$ [M$_{\odot}$ kpc$\cdot$km/s]',
                    'units':'Msun*kpc*km*s**-1',
                    'bin_min':-1e+7,
                    'bin_max':1e+7,
                    'linthresh':10,
                    'linscale':10,
                    'code_units':'code_mass*code_length*code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    ang_momentum_x = {'cmap':sns.color_palette("vlag", as_cmap=True),
                    'text_over':'black',
                    'label':r'$L_x$ [M$_{\odot}$ kpc$\cdot$km/s]',
                    'units':'Msun*kpc*km*s**-1',
                    'bin_min':-1e+7,
                    'bin_max':1e+7,
                    'linthresh':10,
                    'linscale':10,
                    'code_units':'code_mass*code_length*code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    ang_momentum_y = {'cmap':sns.color_palette("vlag", as_cmap=True),
                    'text_over':'black',
                    'label':r'$L_y$ [M$_{\odot}$ kpc$\cdot$km/s]',
                    'units':'Msun*kpc*km*s**-1',
                    'bin_min':-1e+7,
                    'bin_max':1e+7,
                    'linthresh':10,
                    'linscale':10,
                    'code_units':'code_mass*code_length*code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    ang_momentum_z = {'cmap':sns.color_palette("vlag", as_cmap=True),
                    'text_over':'black',
                    'label':r'$L_z$ [M$_{\odot}$ kpc$\cdot$km/s]',
                    'units':'Msun*kpc*km*s**-1',
                    'bin_min':-1e+7,
                    'bin_max':1e+7,
                    'linthresh':10,
                    'linscale':10,
                    'code_units':'code_mass*code_length*code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    massflow_rate = {'cmap':sns.color_palette("vlag", as_cmap=True),
                                'text_over':'black',
                                'label':r'$dM/dt$ [M$_{\odot}$ yr$^{-1}$]',
                                'units':'Msun*yr**-1',
                                'bin_min':-100,
                                'bin_max':100,
                                'code_units': 'code_mass/code_time',
                                'neighbour':False,
                                'symlog':True
    },
    massflow_rate_sphere_r = {'cmap': sns.color_palette("icefire", as_cmap=True),
                                'text_over':'white',
                                'label':r'$dM/dt$ [M$_{\odot}$ yr$^{-1}$]',
                                'units':'Msun*yr**-1',
                                'bin_min':-100,
                                'bin_max':100,
                                'vmin_cgm':-5e-3,
                                'vmax_cgm':5e-3,
                                'linthresh':1e-3,
                                'linscale':1e-3,
                                'code_units': 'code_mass/code_time',
                                'neighbour':False,
                                'symlog':True
    },
    massflux_rate_sphere_r = {'cmap': sns.color_palette("icefire", as_cmap=True),
                                'text_over':'white',
                                'label':r'$dM/dtdA$ [M$_{\odot}$ yr$^{-1}$ kpc$^{-2}$]',
                                'units':'Msun*yr**-1*kpc**-2',
                                'bin_min':-100,
                                'bin_max':100,
                                'vmin_cgm':-5e-3,
                                'vmax_cgm':5e-3,
                                'linthresh':1e-3,
                                'linscale':1e-3,
                                'code_units': 'code_mass/code_time/code_length/code_length',
                                'neighbour':False,
                                'symlog':True
    },
    sigma = {'cmap':'swift.red',
                        'text_over':'white',
                        'label':r'$\sigma_{\rm turb}$ [km s$^{-1}$]',
                        'label_log':r'$\log(\frac{\sigma_{\rm turb}}{{\rm km s}^{-1}})$',
                        'units':'km/s',
                        'vmin':1e-1,
                        'vmax':200,
                        'bin_min':1e-2,
                        'bin_max':1e3,
                        'vmin_galaxy':2,
                        'vmax_galaxy':80,
                        'code_units':'code_velocity',
                        'neighbour':True,
                        'symlog':False

    },
    DTM = {'cmap': sns.color_palette("icefire", as_cmap=True),
                'text_over':'white',
                'label':r'DTM',
                'label_log':r'$\log\left(\rm DTM\right)$',
                'units':'dimensionless',
                'vmin':0,
                'vmax':0.3,
                'vmin_isolated':0.1,
                'vmax_isolated':0.3,
                'vmin_galaxy':8e-3,
                'vmax_galaxy':0.2,
                'code_units':'dimensionless',
                'neighbour':False,
                'symlog':False
    },
    dust_density = {'cmap': sns.color_palette("icefire", as_cmap=True),
                'text_over':'black',
                'label':r'$\rho_{\rm dust}$ [g/cm$^{3}$]',
                'label_log':r'$\log\left(\frac{\rho_{\rm dust}}{{\rm g cm}^{-3}}\right)$',
                'units':'dimensionless',
                'vmin':2e-34,
                'vmax':7e-30,
                'vmin_galaxy':2e-33,
                'vmax_galaxy':5e-30,
                'code_units':'code_density',
                'neighbour':False,
                'symlog':False
    },
    eff_FKmag = {'cmap':'magma',
                'text_over':'white',
                'label':r'$\epsilon_{\rm ff}^{\rm MTT}$',
                'label_log':r'$\log{\epsilon_{\rm ff}^{\rm MTT}}$',
                'units':'dimensionless',
                'vmin':1e-4,
                'vmax':0.01,
                'vmin_galaxy':1e-4,
                'vmax_galaxy':0.01,
                'bin_min':1e-5,
                'bin_max':10,
                'code_units':'dimensionless',
                'neighbour':True,
                'symlog':False
    },
    eff_FKmagnocr = {'cmap':'magma',
                'text_over':'white',
                'label':r'$\epsilon_{\rm ff}^{\rm MTT}$',
                'label_log':r'$\log{\epsilon_{\rm ff}^{\rm MTT}}$',
                'units':'dimensionless',
                'vmin':1e-4,
                'vmax':0.01,
                'vmin_galaxy':1e-4,
                'vmax_galaxy':0.01,
                'bin_min':1e-5,
                'bin_max':10,
                'code_units':'dimensionless',
                'neighbour':True,
                'symlog':False
    },
    eff_FK2 = {'cmap':'magma',
                'text_over':'white',
                'label':r'$\epsilon_{\rm ff}^{\rm MTT}$',
                'label_log':r'$\log{\epsilon_{\rm ff}^{\rm MTT}}$',
                'units':'dimensionless',
                'vmin':1e-4,
                'vmax':0.01,
                'vmin_galaxy':1e-4,
                'vmax_galaxy':0.01,
                'bin_min':1e-5,
                'bin_max':10,
                'code_units':'dimensionless',
                'neighbour':True,
                'symlog':False
    },
)

gravity_variables = dict(
       grav_gz = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$g_{z}$',
                        'label_log':r'$\log(\frac{g_{z}}{{\rm cm/s}^2})$',
                        'units':'cm/s**2',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-100,
                        'bin_max':+100,
                        'vmin_galaxy':-2e-9,
                        'vmax_galaxy':+2e-9,
                        'linthresh':1,
                        'linscale':1,
                        'code_units':'code_specific_energy/code_length',
                        'neighbour':False,
                        'symlog':True
    },
    grav_frsphere = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\rho g_{r}$',
                        'label_log':r'$\log(\frac{\rho g_{r}}{{\rm g cm/s}^2})$',
                        'units':'g*cm/s**2',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-100,
                        'bin_max':+100,
                        'vmin_galaxy':-2e-32,
                        'vmax_galaxy':2e-32,
                        'linthresh':100,
                        'linscale':1,
                        'code_units':'code_pressure/code_length',
                        'neighbour':False,
                        'symlog':True

    },
    grav_fz = {'cmap':sns.color_palette("vlag", as_cmap=True),
                        'text_over':'black',
                        'label':r'$\rho g_{z}$',
                        'label_log':r'$\log(\frac{\rho g_{z}}{{\rm g cm/s}^2})$',
                        'units':'g*cm/s**2',
                        'vmin':-100,
                        'vmax':+100,
                        'bin_min':-100,
                        'bin_max':+100,
                        'vmin_galaxy':-2e-32,
                        'vmax_galaxy':2e-32,
                        'linthresh':100,
                        'linscale':1,
                        'code_units':'code_pressure/code_length',
                        'neighbour':False,
                        'symlog':True

    } 
)

raw_part_variables = dict(
        mass = {'cmap':'gray',
                'text_over':'white',
                'label':r'$M_{*}$ [M$_{\odot}$]',
                'label_log':r'$\log\left(\frac{M_{*}}{{\rmM}_{\odot}}\right)$',
                'units':'Msun',
                'vmin':5.0,
                'vmax':2e+7,
                'vmin_galaxy':5.0,
                'vmax_galaxy':2e+7,
                'code_units':'code_mass',
                'neighbour':False,
                'symlog':False
        },
        metallicity = {'cmap':sns.color_palette("dark:salmon", as_cmap=True),
                        'text_over':'white',
                        'label':r'$Z$ [$Z_{\odot}$]',
                        'units':'dimensionless',
                        'vmin':1e-1,
                        'vmax':None,
                        'code_units':'dimensionless',
                        'neighbour':False,
                        'symlog':False
        },
        tform = {'cmap':'BuPu',
                'text_over':'white',
                'label':r'$t_{\rm form}$ [Gyr]',
                'units':'Gyr',
                'vmin':None,
                'vmax':None,
                'code_units':'code_time',
                'neighbour':False,
                'symlog':False
        },

)

derived_part_variables = dict(
        v_sphere_r = {'cmap':sns.color_palette("icefire", as_cmap=True),
                  'cmap_inflow':'GnBu_r',
                  'cmap_outflow':'YlOrBr_r',
                    'text_over':'white',
                    'label':r'$v_r$ [km/s]',
                    'label_log':r'$\log(\frac{v_r}{\rm km/s})$',
                    'units':'km*s**-1',
                    'vmin':-180,
                    'vmax':+210,
                    'bin_min':-400,
                    'bin_max':+400,
                    'vmin_galaxy':-200,
                    'vmax_galaxy':+250,
                    'vmin_outflow':15,
                    'vmax_outflow':300,
                    'vmin_inflow':80,
                    'vmax_inflow':20,
                    'vmin_cgm':-180,
                    'vmax_cgm':+210,
                    'linthresh':10,
                    'linscale':1,
                    'code_units':'code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    v_sphere_phi = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{\phi}$ [km/s]',
                'label_log':r'$\log\left(v_{\phi}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_sphere_theta = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{\theta}$ [km/s]',
                'label_log':r'$\log\left(v_{\theta}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_cyl_r = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{R}$ [km/s]',
                'label_log':r'$\log\left(v_{R}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_cyl_z = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{z}$ [km/s]',
                'label_log':r'$\log\left(v_{z}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_cyl_phi = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$v_{\phi}$ [km/s]',
                'label_log':r'$\log\left(v_{\phi}/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':True
    },
    v_magnitude = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\vert v \vert$ [km/s]',
                'label_log':r'$\log\left(\vert v \vert/{\rm km/s}\right)$',
                'units':'km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity',
                'neighbour':False,
                'symlog':False
    },
    v_squared = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\vert v \vert^2$ [km$^2$/s$^2$]',
                'label_log':r'$\log\left(\vert v \vert^2/{{\rm (km/s)}^2}\right)$',
                'units':'km**2/s**2',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_velocity*code_velocity',
                'neighbour':False,
                'symlog':False
    },
    kinetic_energy = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$E_{\rm k}$ [erg]',
                'label_log':r'$\log\left(\vert v \vert^2/{{\rm erg}}\right)$',
                'units':'erg',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_energy',
                'neighbour':False,
                'symlog':False
    },
    momentum_x = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_{\rm x}$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_{\rm x}/{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    momentum_y = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_{\rm y}$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_{\rm y}/{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    momentum_z = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_{\rm z}$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_{\rm z}/{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    momentum = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\vert p\vert$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(\vert p \vert/{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':False
    },
    momentum_sphere_r = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_r$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_r /{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    momentum_cyl_z = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$p_z$ [M$_{\odot}$ km/s]',
                'label_log':r'$\log\left(p_z /{{\rm M}_{\odot}{\rm km/s}}\right)$',
                'units':'Msun*km/s',
                'vmin':1e-3,
                'vmax':1e3,
                'bin_min':1e-3,
                'bin_max':1e3,
                'vmin_galaxy':1e-3,
                'vmax_galaxy':1e3,
                'vmin_cgm':1e-3,
                'vmax_cgm':1e3,
                'vmin_cluster':1e0,
                'vmax_cluster':1e4,
                'code_units':'code_mass*code_velocity',
                'neighbour':False,
                'symlog':True
    },
    ang_momentum = {'cmap':sns.color_palette("vlag", as_cmap=True),
                    'text_over':'black',
                    'label':r'$\vert L\vert$ [M$_{\odot}$ kpc$\cdot$km/s]',
                    'units':'Msun*kpc*km*s**-1',
                    'bin_min':-1e+7,
                    'bin_max':1e+7,
                    'linthresh':10,
                    'linscale':10,
                    'code_units':'code_mass*code_length*code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    ang_momentum_x = {'cmap':sns.color_palette("vlag", as_cmap=True),
                    'text_over':'black',
                    'label':r'$L_x$ [M$_{\odot}$ kpc$\cdot$km/s]',
                    'units':'Msun*kpc*km*s**-1',
                    'bin_min':-1e+7,
                    'bin_max':1e+7,
                    'linthresh':10,
                    'linscale':10,
                    'code_units':'code_mass*code_length*code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    ang_momentum_y = {'cmap':sns.color_palette("vlag", as_cmap=True),
                    'text_over':'black',
                    'label':r'$L_y$ [M$_{\odot}$ kpc$\cdot$km/s]',
                    'units':'Msun*kpc*km*s**-1',
                    'bin_min':-1e+7,
                    'bin_max':1e+7,
                    'linthresh':10,
                    'linscale':10,
                    'code_units':'code_mass*code_length*code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    ang_momentum_z = {'cmap':sns.color_palette("vlag", as_cmap=True),
                    'text_over':'black',
                    'label':r'$L_z$ [M$_{\odot}$ kpc$\cdot$km/s]',
                    'units':'Msun*kpc*km*s**-1',
                    'bin_min':-1e+7,
                    'bin_max':1e+7,
                    'linthresh':10,
                    'linscale':10,
                    'code_units':'code_mass*code_length*code_velocity',
                    'neighbour':False,
                    'symlog':True
    },
    density = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\rho$ [M$_{\odot}$/kpc$^{3}$]',
                'label_log':r'$\log\left(\rho/{\rm M}_{\odot}{\rm kpc}^{-3}\right)$',
                'units':'Msun/(kpc**3)',
                'vmin':8e-31,
                'vmax':7e-22,
                'bin_min':1e-30,
                'bin_max':8e-20,
                'vmin_galaxy':8e-28,
                'vmax_galaxy':5e-22,
                'vmin_cgm':5e-29,
                'vmax_cgm':8e-26,
                'vmin_cluster':8e-31,
                'vmax_cluster':7e-22,
                'code_units':'code_density',
                'neighbour':False,
                'symlog':False
    },
    sdensity = {'cmap': sns.color_palette("mako", as_cmap=True),
                'text_over':'white',
                'label':r'$\Sigma$ [g/cm$^{2}$]',
                'label_log':r'$\log\left(\Sigma/{\rm g\,cm}^{-2}\right)$',
                'units':'g*cm**-2',
                'bin_min':1e0,
                'bin_max':1e11,
                'vmin':3e+4,
                'vmax':5e+9,
                'vmin_galaxy':3e+3,
                'vmax_galaxy':5e+9,
                'vmin_cgm':3e+1,
                'vmax_cgm':5e+3,
                'code_units':'code_density*code_length',
                'neighbour':False,
                'symlog':False
    },
)
star_variables = dict(
        age = {'cmap':'BuPu',
                'text_over':'white',
                'label':r'Age [Gyr]',
                'units':'Gyr',
                'vmin':None,
                'vmax':None,
                'code_units':'Gyr',
                'neighbour':False,
                'symlog':False
        },
        birth_date = {'cmap':'BuPu',
                'text_over':'white',
                'label':r'Birth date [Gyr]',
                'units':'Gyr',
                'vmin':None,
                'vmax':None,
                'code_units':'Gyr',
                'neighbour':False,
                'symlog':False
        },
        sfr = {'cmap':'magma',
                            'text_over':'white',
                            'label':r'$\langle {\rm SFR}\rangle))$ [M$_{\odot}$ yr$^{-1}$]',
                            'label_log':r'$\log\left(\frac{ \langle {\rm SFR}\rangle }{{\rm M}_{\odot}{\rm yr}^{-1}\right)$',
                            'units':'Msun/yr',
                            'vmin':3e-4,
                            'vmax':90,
                            'vmin_galaxy':3e-4,
                            'vmax_galaxy':90,
                            'code_units':'code_mass/code_time',
                            'neighbour':False,
                            'symlog':False
        },
        sfr_surface = {'cmap':'magma',
                            'text_over':'white',
                            'label':r'$\langle \Sigma_{\rm SFR}\rangle))$ [M$_{\odot}$ yr$^{-1}$ kpc$^{-2}$]',
                            'label_log':r'$\log\left(\frac{ \langle\Sigma_{\rm SFR}\rangle }{{\rm M}_{\odot}{\rm yr}^{-1}{\rm kpc}^{-2}}\right)$',
                            'units':'Msun/(yr*kpc**2)',
                            'vmin':3e-4,
                            'vmax':90,
                            'vmin_galaxy':3e-4,
                            'vmax_galaxy':90,
                            'code_units':'code_density*code_velocity',
                            'neighbour':False,
                            'symlog':False
        },
        sfr_density = {'cmap':'magma',
                            'text_over':'white',
                            'label':r'$\langle \rho_{\rm SFR}\rangle))$ [M$_{\odot}$ yr$^{-1}$ kpc$^{-3}$]',
                            'label_log':r'$\log\left(\frac{ \langle\rho_{\rm SFR}\rangle}{{\rm M}_{\odot}{\rm yr}^{-1}{\rm kpc}^{-3}}\right)$',
                            'units':'Msun/(yr*kpc**3)',
                            'vmin':3e-4,
                            'vmax':90,
                            'vmin_galaxy':3e-4,
                            'vmax_galaxy':90,
                            'code_units':'code_mass/Gyr/code_length**3',
                            'neighbour':False,
                            'symlog':False
        },
)


circle_dictionary = dict(
        rvir_halo = {'edgecolor': 'r',
                        'linestyle':'--',
                        'linewidth':2.0
        },
        rvir_galaxy = {'edgecolor': 'y',
                        'linestyle':'--',
                        'linewidth':1.0
        },
        rvir_satellite = {'edgecolor': 'w',
                          'linestyle':'--',
                        'linewidth':1.0
        },
        tidal_BT87_simple = {'edgecolor': 'r',
                          'linestyle':':',
                        'linewidth':1.0
        },
        tidal_BT87_centrifugal = {'edgecolor': 'b',
                          'linestyle':':',
                        'linewidth':1.0
        }
)

basic_conv = dict(
    code_length = 'kpc',
    code_mass = 'Msun',
    code_density = 'g*cm**-3',
    code_velocity = 'km*s**-1',
    code_energy = 'erg',
    code_specific_energy = 'erg*g**-1',
    code_specific_energy_code_length = 'cm*s**-2',
    code_energy_density = 'erg*cm**-3',
    code_energy_density_code_time = 'erg*s**-1*cm**-3',
    code_pressure = 'erg*cm**-3',
    code_pressure_code_length = 'erg*cm**-4',
    code_specific_entropy = 'erg*K**-1*g**-1',
    code_density_code_velocity_code_velocity = 'erg*cm**-3',
    code_density_code_velocity = 'Msun*yr**-1*kpc**-2',
    code_density_code_length = 'Msun*kpc**-2',
    code_mass_code_time = 'Msun*yr**-1',
    dimensionless = 'dimensionless',
    radian ='radian',
    code_magnetic = 'gauss',
    code_temperature = 'K',
    code_metallicity = 'dimensionless',
    code_time = 'yr',
    Gyr = 'Gyr'
)

import os
import importlib.util
import sys

def load_custom_settings():
    """Load custom settings if 'ozy_settings.py' exists in the current directory."""
    global geometrical_variables, raw_gas_variables,\
           raw_part_variables, derived_gas_variables,\
           derived_part_variables, star_variables, gravity_variables,\
           circle_dictionary, basic_conv, variables_ordering  # Declare the dictionaries as global to override them
    
    current_dir = os.getcwd()
    ozy_settings_path = os.path.join(current_dir, 'ozy_settings.py')
    
    if os.path.isfile(ozy_settings_path):
        # Load the ozy_settings module dynamically
        module_name = "ozy_settings"
        if module_name in sys.modules:
            del sys.modules[module_name]  # Force re-import

        spec = importlib.util.spec_from_file_location(module_name, ozy_settings_path)
        ozy_settings = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(ozy_settings)
        
        # Override the dictionaries
        geometrical_variables = getattr(ozy_settings, 'geometrical_variables', geometrical_variables)
        raw_gas_variables = getattr(ozy_settings, 'raw_gas_variables', raw_gas_variables)
        raw_part_variables = getattr(ozy_settings, 'raw_part_variables', raw_part_variables)
        derived_gas_variables = getattr(ozy_settings, 'derived_gas_variables', derived_gas_variables)
        derived_part_variables = getattr(ozy_settings, 'derived_part_variables', derived_part_variables)
        star_variables = getattr(ozy_settings, 'star_variables', star_variables)
        gravity_variables = getattr(ozy_settings, 'gravity_variables', gravity_variables)
        circle_dictionary = getattr(ozy_settings, 'circle_dictionary', circle_dictionary)
        basic_conv = getattr(ozy_settings, 'basic_conv', basic_conv)
        hydro_variables_ordering = getattr(ozy_settings, 'hydro_variables_ordering', hydro_variables_ordering)
        part_variables_ordering = getattr(ozy_settings, 'part_variables_ordering', part_variables_ordering)
        part_variables_type = getattr(ozy_settings, 'part_variables_type', part_variables_type)

        print(f"Custom settings loaded successfully from {ozy_settings_path}.")
    else:
        print("No 'ozy_settings.py' file found in the current directory. Using default settings.")

# Call the function to load custom settings at package initialization
load_custom_settings()